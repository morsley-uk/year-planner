@using Morsley.UK.YearPlanner.MVC.ViewModels

@model YearPlannerViewModel

@{
    ViewBag.Title = "Year";
}

<style>

    body {
        background-color: white;
    }

    table {
        margin: 5px 15px !important;
        table-layout: fixed;
    }

    td, th {
    }

    td.offset {
        background-color: lightgray;
        border-collapse: collapse;
        border: none;
    }

    td.day.weekend {
        background-color: lightgoldenrodyellow;
    }

    td.month-name,
    th.day-of-week {
        font-size: 1em;
        font-weight: bold;
        background-color: grey;
        color: white;
        text-align: center;
    }

    td.day {
        background-color: white;
        padding: 3px 0 25px 5px !important;
        font-size: 0.7em;
        text-align: left;
        vertical-align: top;
        border-top: 1px solid black;
        border-bottom: 1px solid black;
    }

    td.day.first {
        border-left: 1px solid black;
    }

    td.day.last {
        border-right: 1px solid black;
    }

</style>

<nav>
    <ul class="pagination">
        <li class="page-item">
            <a class="page-link" href="@Url.Action(controller: "Planner", action: "Year", values: new { value = Model.Year.Value - 1 })" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
                <span class="sr-only">Previous</span>
            </a>
        </li>
        <li class="page-item disabled"><a class="page-link" href="#">@Model.Year.Value</a></li>
        <li class="page-item">
            <a class="page-link" href="@Url.Action(controller: "Planner", action: "Year", values: new { value = Model.Year.Value + 1 })" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
                <span class="sr-only">Next</span>
            </a>
        </li>
    </ul>
</nav>

<table id="year-planner" class="table table-bordered" style="width: 100%;">

    <tr class="header">
        <th class="corner"></th>
        @foreach (var dayOfWeek in Model.Header)
        {
            <th class="day-of-week">
                @dayOfWeek.ToString().Substring(0, 1)
            </th>
        }
        <th class="corner"></th>
    </tr>

    @foreach (var month in Model.Year.Months)
    {
        var monthInitial = month.Name.Substring(0, 1);
        var lastDayInMonth = month.Days.Last();
        var leftOffset = Model.LeftOffsets[month.Value];
        var rightOffset = Model.RightOffsets[month.Value];
        <tr class="month">
            <td class="month-name">@monthInitial</td>

            @for (var i = 0; i < leftOffset; i++)
            {
                <td class="offset"></td>
            }

            @foreach (var day in month.Days)
            {
                var isFirstDayOfMonth = day.Value == 1;
                var isLastDayOfMonth = day.Value == lastDayInMonth.Value;
                var isWeekend = day.DayOfWeek == DayOfWeek.Saturday || day.DayOfWeek == DayOfWeek.Sunday;
                var dayClasses = "day";
                if (isFirstDayOfMonth) { dayClasses += " first"; }
                if (isLastDayOfMonth) { dayClasses += " last"; }
                if (isWeekend) { dayClasses += " weekend"; }
                if (day.Modes.Any())
                {
                    foreach (var mode in day.Modes)
                    {
                        dayClasses += $" {mode.ToString().ToLower()}";
                    }
                }
                <td class="@dayClasses">
                    @day.Value
                </td>
            }

            @for (var i = 0; i < rightOffset; i++)
            {
                <td class="offset"></td>
            }

            <td class="month-name">@monthInitial</td>
        </tr>
    }

    <tr class="header">
        <th class="corner"></th>
        @foreach (var dayOfWeek in Model.Header)
        {
            <th class="day-of-week">
                @dayOfWeek.ToString().Substring(0, 1)
            </th>
        }
        <th class="corner"></th>
    </tr>

</table>